---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: env-injector-webhook
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: env-injector
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-envinjector
  namespace: admin
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: env-injector-webhook
      app.kubernetes.io/instance: akv2k8s-kvcontroller
      app.kubernetes.io/name: env-injector

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: controller
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-controller
  namespace: admin

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: env-injector
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-envinjector
  namespace: admin

---
apiVersion: v1
data: null
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: controller
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-controller-env
  namespace: admin

---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGakNDQWY2Z0F3SUJBZ0lSQU14aHJYUzZkUlZVSFFyR3crY2xsT1l3RFFZSktvWklodmNOQVFFTEJRQXcKRlRFVE1CRUdBMVVFQXhNS2MzWmpMV05oZEMxallUQWVGdzB5TVRBeU1qRXhNelE1TWpGYUZ3MHpNVEF5TVRreApNelE1TWpGYU1CVXhFekFSQmdOVkJBTVRDbk4yWXkxallYUXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBCkE0SUJEd0F3Z2dFS0FvSUJBUUNxeGxVUHFUSUtPb3RhZkdaNWlqbjROaWhBVEpoTTh5ajNmb3lUdUs0ZE5VQlMKN3RTTERHaGFkTXdsTWJ6YXAxenZNVEVSMC9paEg3OXpBblBCYXRoSW1lZzhSenppOXptb3JHQzNZVTFGQThaTgpBeFVWNGVQa3NoMkQ0ZDFWRmhGQk9xSHh6bS9FRGYxanl6NUh0Mithbk1wem12Y0RoNFJOTG5GZDZQRVBTYmZHCm0rbFBMbUszUEpKVGdBYWEyTHduMlMxVmh4b0tpUVVhVnhOQUg1Z3BMNDl6NENmWWI1VHU0czFvSjRhQnJoTkYKN21wTi9Pa1FuOU1oWEdNSks1Wm1Eb3A5L3hqakxwRENGSjZCdUVKTEt5aVB6NU5kajIrTXlIelo0eHR6VGJPQwpCVVNtQVVSN3RpSTVLNE5BMllNRVFqRXVyK2dreUh6aUxjOGhuVlI5QWdNQkFBR2pZVEJmTUE0R0ExVWREd0VCCi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVUmVjUDc3eUNQcFFDVy9XR1lrK21jSkRIbmVVd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBSkJDeGt4NzhBUVd5ME81bTBJdThENFAzZnNBV3JvdjBoaXo4elora3Q2U0NEVDFlL28xCkNZQW1TMU92YUkzbGc0V0NYaDNxU1FVRDduU0U4cHBOU1NSRTBNYjlaUUR6Z1FSZkQ0TDJNY0FVVXJ0VXNkR0sKZTJ2Z1p5V29QNnhXdmtkNXFEalBVVlNmdWJuNVFaMDNlTzRvRnFhc1JmaThGdy9weGtIY3gvNlZ5eTdtdDZ5agpSbTZkNUVaN3ZUNmpPS3VSdkxMak5GSWNueEc3ZHgvZXJRTFo1Qm1ZUzZtTWU4WmJkVmN0bTBRQVkvWEhLbjVYCng1NFovWmRWODgrNGgwZTVBdGVxbHlKdEpEdlZLSEplczRLbjRDTW9KUEdGTTdFbCsya3AwREtuRkdNS2hOSWUKdGlmWmFDYUZkQ0gydUhheHM2aWo1dU1UVjJ0WTJzaGRDcnM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURwekNDQW8rZ0F3SUJBZ0lRQjRVS1QwQjN5Z3NzcWwvYkxrWGo2ekFOQmdrcWhraUc5dzBCQVFzRkFEQVYKTVJNd0VRWURWUVFERXdwemRtTXRZMkYwTFdOaE1CNFhEVEl4TURJeU1URXpORGt5TVZvWERUSXpNREl5TVRFegpORGt5TVZvd05URXpNREVHQTFVRUF4TXFZV3QyTW1zNGN5MXJkbU52Ym5SeWIyeHNaWEl0Wlc1MmFXNXFaV04wCmIzSXVZV1J0YVc0dWMzWmpNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRRUGgKSS9qL0NUd090aE5lVGdvRFZjN2xJOHNiYWh5Q0wyTEpMaWg5SFoyUWVBeVU1ZkZvd1QyaFZXV2NkdkxBRk9uMQovR0EzSVdPRStMRzNCL2s0cGxxa00xN3pVdTJJVzNSQ05pNUtFcCtuUXIrM1JvZmpzbTRQbDAyM010eXNKVEVkCktTK05nTldHVXg1dXJwZTJTTU9ZWlo0OUZOVDVTbUNYZWFSeWp0K1hkbU9EY3NpeVk4VHNZUTROUFo0UVBja2MKTnArZVdyNG91alpQNHA5dm5rWDY5S05xdmttbTlIYVNtdnBvWWVwRE9RcjhIcGlROE5qTXlGS1l0OWFpVFE4cwozR0hIclhQQU43RnM3QXhkS3BuUi9help2b1hiaWJQVU4xa212VEtyZXB4ckJxVTNTQXA3N3RKelQ2STg5UXJyCkZwRzIyb3J4REs2YlVIUFJJd0lEQVFBQm80SFNNSUhQTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUUKRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBVwpnQlJGNXcvdnZJSStsQUpiOVlaaVQ2WndrTWVkNVRCdkJnTlZIUkVFYURCbWdqaGhhM1l5YXpoekxXdDJZMjl1CmRISnZiR3hsY2kxbGJuWnBibXBsWTNSdmNpNWhaRzFwYmk1emRtTXVZMngxYzNSbGNpNXNiMk5oYklJcVlXdDIKTW1zNGN5MXJkbU52Ym5SeWIyeHNaWEl0Wlc1MmFXNXFaV04wYjNJdVlXUnRhVzR1YzNaak1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUFLRm9VdE9QQWF6SGRuK0dtbGJXV1JJWXhXTlM3clh3Tnl5RXRLTVV3VEI4cTZ2L1NkCmJkOERWWkc3VFdocHRRaGhITEphTnM4dVZjTDk3ZnBVVGRLVENqc05NRi8reUtreTQ3SFNCblloV0F2Qm90T2gKSXhlL3dUYWdPWWVuWmMvTkdOK1RGMlRGaVlsRjBRcncrTlR0c3ZEQ2FBZjl4ZWF6WUx0Y3lWMFYwMTFHTksrNgpzUVZ4SVE0anpHZTNKY3ZRdXNGOVl2eG1hcTl6SDdNN1VZR242MXJpSk55ejlSMExMTkVtVWMreHFFSS9ncncyCnRrRFdVa3BiL0QxRForNmYrQXQvMlRGSUxibW1JYjlkcGdBVjRYdDBrUlFqajA0WHBsZW5FMzIvQ3JpWHpPWXAKalBvNXNzM1BFcEdzTFNHRmFRM2g4dWRrL0NpQ3BYeDl0ckdHCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdFFQaEkvai9DVHdPdGhOZVRnb0RWYzdsSThzYmFoeUNMMkxKTGloOUhaMlFlQXlVCjVmRm93VDJoVldXY2R2TEFGT24xL0dBM0lXT0UrTEczQi9rNHBscWtNMTd6VXUySVczUkNOaTVLRXArblFyKzMKUm9manNtNFBsMDIzTXR5c0pURWRLUytOZ05XR1V4NXVycGUyU01PWVpaNDlGTlQ1U21DWGVhUnlqdCtYZG1PRApjc2l5WThUc1lRNE5QWjRRUGNrY05wK2VXcjRvdWpaUDRwOXZua1g2OUtOcXZrbW05SGFTbXZwb1llcERPUXI4CkhwaVE4TmpNeUZLWXQ5YWlUUThzM0dISHJYUEFON0ZzN0F4ZEtwblIvYXpadm9YYmliUFVOMWttdlRLcmVweHIKQnFVM1NBcDc3dEp6VDZJODlRcnJGcEcyMm9yeERLNmJVSFBSSXdJREFRQUJBb0lCQUFqSHptVDdVQXUzb1JNTgo3M1lqb0RQS1hHMFhEaFpnbWFRSXk2OTBnVlV0Ym5PVVVLaXl4QjBUaXo3a05lbkRMclFWQVR5andpalpkZnJHClRCV1Q3ajZMaVFtQTRwYTBOUGdTdEorQ01VK2o5TzRVOUtQME5ZUlRPR2hqZWE1NjY5TEdCaDhZVW1uY2NhNlkKZkUvMXhmN1RsaEhmMGlDdmtBUWVtVnBxTXJCaGJVT1pGVFU3cW9lSlQyQk1Vd3laV0oydmZEZnFoMWdZRnBqOQoxV2NRSll2eG03ZTZ2Z1dGV1R5L0ZhU3VhaE9nVmNxbThibVkvcURoTUlRQWk5ZllUcW5hWmhFVm5COFpHQzFxCmd1M1dBbi92ZkloeityQ0NvVmdRMWZ4OXRFSi96K3FkNWNTUVEwMXhCM0xNdjY3SmM5eXVac2ZKYnozeGM3NDEKTGl3ZkVpa0NnWUVBek81WFNRZ29hRFNjMU1vZm01K2lvWVZRZml2T2Nwbi9ybVViNW9PTmtSSmxWYUNFQktLVwpaVG9SYUpNenpxRGJkMllNYjJKRjZHZXJiTTkwOWxGMWNYUVE0enFyaDhPYTlOVGNTODFjVWtGZEduNll4NUY4CjZaSndSaWx0UEs0SHRwTTVWRXBrU3IvcWtkWEJ6aDBjYmNXbkZ4aEdtUDB1UmNTVWg4OUVOSFVDZ1lFQTRoL1EKNVBOTEIzMkdFMjhEYnd2ZkpsS3N6cnJLeWNlM0dCVE9oYVVxZGtFM0ZJTGZaaFpHWnRnVmtoZU9BakkvWnRldgpycGd3TElnNXZwUGd5WlgxdVpKeUEzUFdNL0F3ODNLNHdXeVFTWkVQUXRER0J3WUlqZVM2VklmZDE0VjFWTnYzCmpXV3UyeWxRNG5ZajJrMlJ3WHdJSmtjOEl0TzVKQm9MdGlYWTNEY0NnWUVBaWlCM3lxenA5MXJHL3BJQi9mWDYKT3g1Tlk4MkpDQ3VPYjNDTS9yRmE0UlppSVBYaEpmS2twalFlZWJzR0oxYTZ0bDZkTVJJdkJuZWh6dVNCOUdoeApYWGdhemQzRXNleUE3RmJ3NlZMUTBFeG9RYXhrczliM044UFJVeWtuRE1oTVFKNDQvUHhyWHdxK1EyK3Rnb3lTCmxkYXNTZCs5N2U1d211dm1KU2ZwMCtVQ2dZRUF0T0JzVVdlSGdjTlhwMTNxcWo0ZHp1TGRGalIybC9kb0x4d2QKb3V2ZVRsK1dOcE1GTGZ6dGJjQzFhSG5zL3piQVhueHpMRDdTY2h5NXpBY3dEVEFtTWIzQjg1OEtIZHVvM0dQTgpBL1BhYXU1Yy9iNVFXVGZyU2MxSGV1eC9lTEZwakdxejEyZ1orWGRRR3dZVFljRWdzVnVNalVuNEFZZklsZWM3CnJRVVROZnNDZ1lBZUtNdzh2c0NHSGhUUnRlUG5RazFkUndmV2RSYThmN0VXaG1MT21xZVRHQ21EZ3Rlc2FUYWkKbGxUanJxM1oxQ1JXL3E2SWdtUkp6Y0NLSkdHSDFkTUFraC94OWlFeXhCR2xKQTdGN010c0JsY05vNWMvSkwyeQpXZ01DUGdqYzF3QkRidmViS0pKUjZ6OVQwQ3RKU21ROE95aUZHQVUxRjY3WWxrSXEzWGFYWnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: env-injector
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-envinjector-webhook-tls
  namespace: admin

---
apiVersion: v1
data: null
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: env-injector
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-envinjector-webhook-env
  namespace: admin

---
apiVersion: v1
data: null
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: env-injector
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-envinjector-cabundlecontroller-env
  namespace: admin

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: controller
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-controller
  namespace: admin
rules:
- apiGroups:
  - spv.no
  resources:
  - azurekeyvaultsecrets
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - spv.no
  resources:
  - azurekeyvaultsecrets/status
  verbs:
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - update
  - delete
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - update
  - patch

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: controller
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-controller-reader
  namespace: admin
rules:
- apiGroups:
  - spv.no
  resources:
  - azurekeyvaultsecrets
  verbs:
  - get
  - list
  - watch

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: env-injector
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-envinjector
  namespace: admin
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: env-injector
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-envinjector-reader
  namespace: admin
rules:
- apiGroups:
  - spv.no
  resources:
  - azurekeyvaultsecrets
  verbs:
  - get
  - list
  - watch

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: env-injector
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-envinjector-ca-bundle
  namespace: admin
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - update
  - delete
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - update
  - patch

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: controller
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-controller
  namespace: admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: akv2k8s-kvcontroller-controller
subjects:
- kind: ServiceAccount
  name: akv2k8s-kvcontroller-controller
  namespace: admin

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: controller
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-controller-reader
  namespace: admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: akv2k8s-kvcontroller-controller-reader
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:serviceaccounts

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: env-injector
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-envinjector-ca-bundle
  namespace: admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: akv2k8s-kvcontroller-envinjector-ca-bundle
subjects:
- kind: ServiceAccount
  name: akv2k8s-kvcontroller-envinjector
  namespace: admin

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: env-injector
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-envinjector-sa
  namespace: admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: akv2k8s-kvcontroller-envinjector
subjects:
- kind: ServiceAccount
  name: akv2k8s-kvcontroller-envinjector
  namespace: admin

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: env-injector
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-envinjector-reader
  namespace: admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: akv2k8s-kvcontroller-envinjector-reader
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:serviceaccounts

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: env-injector
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-envinjector-ca-bundle
  namespace: admin
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - watch
  - list

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: env-injector
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-envinjector-ca-bundle
  namespace: admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: akv2k8s-kvcontroller-envinjector-ca-bundle
subjects:
- kind: ServiceAccount
  name: akv2k8s-kvcontroller-envinjector
  namespace: admin

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: env-injector
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-envinjector
  namespace: admin
spec:
  ports:
  - name: azure-keyvault-secrets-webhook
    port: 443
    protocol: TCP
    targetPort: 443
  - name: azure-keyvault-secrets-webhook-http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app.kubernetes.io/component: env-injector-webhook
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/name: env-injector
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: akv2k8s-controller
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: controller
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-controller
  namespace: admin
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: akv2k8s-kvcontroller
      app.kubernetes.io/name: controller
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: akv2k8s-kvcontroller
        app.kubernetes.io/name: controller
    spec:
      containers:
      - args:
        - --cloudconfig=/etc/kubernetes/azure.json
        env:
        - name: AZURE_VAULT_NORMAL_POLL_INTERVALS
          value: 1m
        - name: AZURE_VAULT_EXCEPTION_POLL_INTERVALS
          value: 10m
        - name: AZURE_VAULT_MAX_FAILURE_ATTEMPTS
          value: "5"
        - name: RUNNING_INSIDE_AZURE_AKS
          value: "true"
        - name: CUSTOM_AUTH
          value: "false"
        - name: LOG_LEVEL
          value: info
        - name: LOG_FORMAT
          value: fmt
        image: spvest/azure-keyvault-controller:1.1.0
        imagePullPolicy: IfNotPresent
        name: controller
        volumeMounts:
        - mountPath: /etc/kubernetes/azure.json
          name: azure-config
          readOnly: true
      serviceAccountName: akv2k8s-kvcontroller-controller
      volumes:
      - hostPath:
          path: /etc/kubernetes/azure.json
          type: File
        name: azure-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: akv2k8s-ca-bundle
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: env-injector
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-envinjector-ca-bundle
  namespace: admin
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: akv2k8s-ca-bundle
      app.kubernetes.io/instance: akv2k8s-kvcontroller
      app.kubernetes.io/name: env-injector
  template:
    metadata:
      annotations:
        checksum/config: c4f6332960744181d755b42a020044d7bb2c39d67bf8fb92a1872967f46567ad
      labels:
        app.kubernetes.io/component: akv2k8s-ca-bundle
        app.kubernetes.io/instance: akv2k8s-kvcontroller
        app.kubernetes.io/name: env-injector
    spec:
      containers:
      - args:
        - --cloudconfig=/etc/kubernetes/azure.json
        env:
        - name: AKV_LABEL_NAME
          value: azure-key-vault-env-injection
        - name: AKV_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AKV_SECRET_NAME
          value: akv2k8s-kvcontroller-envinjector-webhook-tls
        - name: CA_FILE
          value: /var/ca-cert/ca.crt
        - name: CA_CONFIG_MAP_NAME
          value: akv2k8s-ca
        - name: LOG_LEVEL
          value: Info
        - name: LOG_FORMAT
          value: fmt
        image: spvest/ca-bundle-controller:1.1.0
        imagePullPolicy: IfNotPresent
        name: ca-bundle-controller
        volumeMounts:
        - mountPath: /var/ca-cert
          name: ca-cert
      serviceAccountName: akv2k8s-kvcontroller-envinjector
      volumes:
      - name: ca-cert
        secret:
          defaultMode: 420
          secretName: akv2k8s-kvcontroller-envinjector-webhook-tls

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: env-injector-webhook
    app.kubernetes.io/instance: akv2k8s-kvcontroller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: env-injector
    helm.sh/chart: akv2k8s-1.1.28
  name: akv2k8s-kvcontroller-envinjector
  namespace: admin
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/component: env-injector-webhook
      app.kubernetes.io/instance: akv2k8s-kvcontroller
      app.kubernetes.io/name: env-injector
  template:
    metadata:
      annotations:
        checksum/config: 1eea661716ead9f0571b3923af014014817399ad63a2600ae0ef45e551975768
      labels:
        app.kubernetes.io/component: env-injector-webhook
        app.kubernetes.io/instance: akv2k8s-kvcontroller
        app.kubernetes.io/name: env-injector
    spec:
      containers:
      - args:
        - --version=1.1.10
        - --versionEnvIage=1.1.1
        env:
        - name: PORT
          value: "443"
        - name: RUNNING_INSIDE_AZURE_AKS
          value: "true"
        - name: TLS_CERT_FILE
          value: /var/serving-cert/tls.crt
        - name: TLS_PRIVATE_KEY_FILE
          value: /var/serving-cert/tls.key
        - name: TLS_CA_FILE
          value: /var/serving-cert/ca.crt
        - name: WEBHOOK_AUTH_SERVICE
          value: akv2k8s-kvcontroller-envinjector
        - name: WEBHOOK_AUTH_SERVICE_PORT
          value: "443"
        - name: CA_CONFIG_MAP_NAME
          value: akv2k8s-ca
        - name: CUSTOM_AUTH
          value: "false"
        - name: USE_AUTH_SERVICE
          value: "true"
        - name: AZUREKEYVAULT_ENV_IMAGE
          value: spvest/azure-keyvault-env:1.1.1
        - name: CLOUD_CONFIG_HOST_PATH
          value: /etc/kubernetes/azure.json
        - name: DOCKER_IMAGE_INSPECTION_TIMEOUT
          value: "20"
        - name: DOCKER_IMAGE_INSPECTION_USE_ACS_CREDENTIALS
          value: "true"
        - name: LOG_LEVEL
          value: Info
        - name: LOG_FORMAT
          value: fmt
        - name: METRICS_ENABLED
          value: "false"
        image: spvest/azure-keyvault-webhook:1.1.10
        imagePullPolicy: IfNotPresent
        name: webhook
        ports:
        - containerPort: 443
          name: webhook
        - containerPort: 80
          name: http
        readinessProbe:
          httpGet:
            path: /healthz
            port: 443
            scheme: HTTPS
        securityContext:
          allowPrivilegeEscalation: true
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
        - mountPath: /etc/kubernetes/azure.json
          name: azureconf
          readOnly: true
      serviceAccountName: akv2k8s-kvcontroller-envinjector
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: akv2k8s-kvcontroller-envinjector-webhook-tls
      - hostPath:
          path: /etc/kubernetes/azure.json
          type: File
        name: azureconf

---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: akv2k8s-kvcontroller-envinjector
  namespace: admin
webhooks:
- clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGakNDQWY2Z0F3SUJBZ0lSQU14aHJYUzZkUlZVSFFyR3crY2xsT1l3RFFZSktvWklodmNOQVFFTEJRQXcKRlRFVE1CRUdBMVVFQXhNS2MzWmpMV05oZEMxallUQWVGdzB5TVRBeU1qRXhNelE1TWpGYUZ3MHpNVEF5TVRreApNelE1TWpGYU1CVXhFekFSQmdOVkJBTVRDbk4yWXkxallYUXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBCkE0SUJEd0F3Z2dFS0FvSUJBUUNxeGxVUHFUSUtPb3RhZkdaNWlqbjROaWhBVEpoTTh5ajNmb3lUdUs0ZE5VQlMKN3RTTERHaGFkTXdsTWJ6YXAxenZNVEVSMC9paEg3OXpBblBCYXRoSW1lZzhSenppOXptb3JHQzNZVTFGQThaTgpBeFVWNGVQa3NoMkQ0ZDFWRmhGQk9xSHh6bS9FRGYxanl6NUh0Mithbk1wem12Y0RoNFJOTG5GZDZQRVBTYmZHCm0rbFBMbUszUEpKVGdBYWEyTHduMlMxVmh4b0tpUVVhVnhOQUg1Z3BMNDl6NENmWWI1VHU0czFvSjRhQnJoTkYKN21wTi9Pa1FuOU1oWEdNSks1Wm1Eb3A5L3hqakxwRENGSjZCdUVKTEt5aVB6NU5kajIrTXlIelo0eHR6VGJPQwpCVVNtQVVSN3RpSTVLNE5BMllNRVFqRXVyK2dreUh6aUxjOGhuVlI5QWdNQkFBR2pZVEJmTUE0R0ExVWREd0VCCi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVUmVjUDc3eUNQcFFDVy9XR1lrK21jSkRIbmVVd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBSkJDeGt4NzhBUVd5ME81bTBJdThENFAzZnNBV3JvdjBoaXo4elora3Q2U0NEVDFlL28xCkNZQW1TMU92YUkzbGc0V0NYaDNxU1FVRDduU0U4cHBOU1NSRTBNYjlaUUR6Z1FSZkQ0TDJNY0FVVXJ0VXNkR0sKZTJ2Z1p5V29QNnhXdmtkNXFEalBVVlNmdWJuNVFaMDNlTzRvRnFhc1JmaThGdy9weGtIY3gvNlZ5eTdtdDZ5agpSbTZkNUVaN3ZUNmpPS3VSdkxMak5GSWNueEc3ZHgvZXJRTFo1Qm1ZUzZtTWU4WmJkVmN0bTBRQVkvWEhLbjVYCng1NFovWmRWODgrNGgwZTVBdGVxbHlKdEpEdlZLSEplczRLbjRDTW9KUEdGTTdFbCsya3AwREtuRkdNS2hOSWUKdGlmWmFDYUZkQ0gydUhheHM2aWo1dU1UVjJ0WTJzaGRDcnM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    service:
      name: akv2k8s-kvcontroller-envinjector
      namespace: admin
      path: /pods
  failurePolicy: Fail
  name: pods.env-injector.admission.spv.no
  namespaceSelector:
    matchExpressions:
    - key: name
      operator: NotIn
      values:
      - kube-system
    - key: name
      operator: NotIn
      values:
      - admin
    matchLabels:
      azure-key-vault-env-injection: enabled
  rules:
  - apiGroups:
    - '*'
    apiVersions:
    - '*'
    operations:
    - CREATE
    resources:
    - pods

